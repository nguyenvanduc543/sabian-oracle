# -*- coding: utf-8 -*-
import random
import re
import os

from kivy.app import App
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.button import Button
from kivy.uix.label import Label
from kivy.uix.scrollview import ScrollView
from kivy.uix.textinput import TextInput


def get_sabian_symbol(dice1, dice2):
    try:
        # L·∫•y ƒë∆∞·ªùng d·∫´n file k√®m theo APK
        base_path = os.path.dirname(os.path.abspath(__file__))
        file_path = os.path.join(base_path, "1158872025.txt")

        with open(file_path, "r", encoding="utf-8") as file:
            content = file.read()

        symbol_key = f"{dice1}-{dice2}"
        pattern = rf"{symbol_key}\:.*?(\n\d+\-\d+\:|\Z)"
        match = re.search(pattern, content, re.DOTALL)

        if match:
            symbol_text = match.group(0)
            symbol_text = re.sub(r"\n\d+\-\d+\:.*$", "", symbol_text, flags=re.DOTALL)
            return symbol_text.strip()
        else:
            return f"‚ùå Kh√¥ng t√¨m th·∫•y Sabian Symbol cho {symbol_key}"
    except FileNotFoundError:
        return "‚ö†Ô∏è L·ªói: Kh√¥ng t√¨m th·∫•y file '1158872025.txt'."
    except UnicodeDecodeError:
        return "‚ö†Ô∏è L·ªói: Kh√¥ng th·ªÉ ƒë·ªçc file, h√£y l∆∞u file ·ªü d·∫°ng UTF-8."
    except Exception as e:
        return f"‚ö†Ô∏è L·ªói: {str(e)}"


class SabianLayout(BoxLayout):
    def __init__(self, **kwargs):
        super().__init__(orientation="vertical", **kwargs)

        # N√∫t l·∫Øc x√∫c x·∫Øc
        self.roll_button = Button(
            text="üé≤ L·∫Øc x√∫c x·∫Øc",
            font_size=22,
            size_hint=(1, None),
            height=60
        )
        self.roll_button.bind(on_release=self.roll_dice)
        self.add_widget(self.roll_button)

        # Khung scroll hi·ªÉn th·ªã k·∫øt qu·∫£
        self.scroll = ScrollView(size_hint=(1, 1))
        self.output_box = TextInput(
            text="üîÆ Ch√†o m·ª´ng ƒë·∫øn v·ªõi Sabian Oracle!",
            readonly=True,
            font_size=16,
            size_hint_y=None,
            height=800,
        )
        self.output_box.bind(minimum_height=self.output_box.setter('height'))
        self.scroll.add_widget(self.output_box)
        self.add_widget(self.scroll)

    def roll_dice(self, instance):
        dice1 = random.randint(1, 12)
        dice2 = random.randint(1, 30)
        result_text = f"üé≤ K·∫øt qu·∫£ x√∫c x·∫Øc: {dice1}-{dice2}\n\nüîÆ D·ª± ƒëo√°n Sabian:\n\n"
        result_text += get_sabian_symbol(dice1, dice2)
        self.output_box.text = result_text


class SabianOracleApp(App):
    def build(self):
        self.title = "Sabian Oracle üé≤üîÆ"
        return SabianLayout()


if __name__ == "__main__":
    SabianOracleApp().run()
